#!/usr/bin/env __run
# ---------------------------------------------------------------------------
# @gen-context – emit a concise yet useful snapshot of the repo for Codex/GPT.
#
# Features
#   • Prints the full content of a small whitelist of key Prolog files.
#   • For all other *.pl files it shows only the first `:- module(...)` line.
#   • Summarises the TypeScript runtime by listing exported symbols instead of
#     dumping ~200 lines verbatim.
#   • Every command is echoed before execution (à la `set -x` but cleaner) so
#     it is obvious where the output originates from.
# ---------------------------------------------------------------------------

# -------- helpers -----------------------------------------------------------

print_section() {
	printf '\n================ %s ================\n' "$1"
}

# echo & run – keeps the transcript readable. Takes a *single* string so we can
# include pipes, redirections, etc.
run() {
	local cmd="$*"
	echo "▶ $cmd"
	bash -c "$cmd"
}

# Path whitelist for full dumps
is_whitelisted() {
	case "$1" in
	  src/comp.pl | src/directives.pl | src/ir.pl ) return 0 ;;
	esac
	return 1
}

# Extract first module declaration or non-empty line
first_module_decl() {
	while IFS=$'\n' read line; do
		echo "$line"
		if [[ $line =~ ^.*\)\.\S*$ ]]; then break; fi
	done <"$1"
}

# -------- sections ----------------------------------------------------------

print_section "files"
run "git ls-files"

print_section "Prolog sources"
for f in $(find src -type f -name '*.pl' -not -name '*_test.pl' | sort); do
	if is_whitelisted "$f"; then
		print_section "$f (full)"
		run "cat '$f'"
	else
		print_section "$f (head)"
		first_module_decl "$f"
		echo ...
	fi
done

if [ -f packages/pl-runtime/index.ts ]; then
	print_section "TypeScript runtime – exported symbols"
	run "grep -E '^export (class|const|function|interface)' packages/pl-runtime/index.ts | sed -E 's/^export\\s+//'"
fi
